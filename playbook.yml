---
- name: Automate CI/CD Pipeline for .NET Microservices
  hosts: localhost
  vars:
    base_dir: "/tmp/repos"  # Base directory for managing repositories
    dockerfile_template: "./vars/Dockerfile.template"  # Path to your Dockerfile template
    circleci_template: "./vars/Circleciconfig.yml.template"  # Path to your CircleCI config template
    octopus_template: "./vars/Octopusdeploy.template"
    git_user_name: "{{ GIT_USER }}"
    git_user_email: "{{ GIT_EMAIL }}"
    git_pat: "{{ GIT_PAT }}"
    application_name: "{{ app_name }}"
    jira_ticket : "{{ jira_ticket }}"
    github_url : "{{ github_url }}"
  tasks:
    - name: Set Git global user name
      ansible.builtin.command:
        cmd: git config --global user.name "{{ git_user_name }}"

    - name: Set Git global user email
      ansible.builtin.command:
        cmd: git config --global user.email "{{ git_user_email }}"

    - name: Configure Git credential helper
      ansible.builtin.command:
        cmd: git config --global credential.helper store

    - name: Create .git-credentials file
      ansible.builtin.copy:
        dest: "{{ lookup('env', 'HOME') }}/.git-credentials"
        content: "https://{{git_user_name}}:{{ git_pat }}@github.com"
        mode: '0600'

    - name: Remove base directory if it exists
      file:
        path: "{{ base_dir }}"
        state: absent

    - name: Recreate base directory
      file:
        path: "{{ base_dir }}"
        state: directory

    - name: Clone the repository
      git:
        repo: "{{ github_url }}"
        dest: "{{ base_dir }}/{{ application_name }}"
        version: main

    - name: Create and checkout new branch
      shell: |
        git checkout -b {{ jira_ticket }}
        git pull origin {{ jira_ticket }} --no-rebase --strategy=recursive --strategy-option=theirs || true
      args:
        chdir: "{{ base_dir }}/{{ application_name }}"

    - name: Create .circleci directory
      file:
        path: "{{ base_dir }}/{{ application_name }}/.circleci"
        state: directory

    - name: Add or overwrite Dockerfile
      copy:
        src: "{{ dockerfile_template }}"
        dest: "{{ base_dir }}/{{ application_name }}/Dockerfile"
        force: yes

    - name: Add or overwrite CircleCI config
      copy:
        src: "{{ circleci_template }}"
        dest: "{{ base_dir }}/{{ application_name }}/.circleci/config.yml"
        force: yes

    - name: Add or overwrite Octopus deploy
      copy:
        src: "{{ octopus_template }}"
        dest: "{{ base_dir }}/{{ application_name }}/deploy.yml"
        force: yes

    - name: Commit changes to git
      shell: |
        git add . 
        git commit -m '{{ jira_ticket }} Adding CI Pipeline'
      args:
        chdir: "{{ base_dir }}/{{ application_name }}"
      failed_when: false

    - name: Push the branch to remote
      command: "git push origin {{ jira_ticket }}"
      args:
        chdir: "{{ base_dir }}/{{ application_name }}"

    - name: Print summary
      debug:
        msg: "Processed application: {{ application_name }} with Jira ticket: {{ jira_ticket }}"
